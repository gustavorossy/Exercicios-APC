#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct{
    float coeficiente;
    int expoente;
} dados;

void soma(int n1, dados *p1, int n2, dados *p2);
void sub(int n1, dados *p1, int n2, dados *p2);

int main() {
    int num_testes, i, n1, j, n2;
    char operacao;

    scanf("%i", &num_testes);
    for(i=0;i<num_testes;i++){
        //printf("Digite a operacao: ");
        getchar();
        scanf("%c", &operacao);
        scanf("%i", &n1);
        dados polinomio1[n1];
        for(j=0;j<n1;j++){
            scanf("%f %i", &polinomio1[j].coeficiente, &polinomio1[j].expoente);
        }
        scanf("%i", &n2);
        dados polinomio2[n2];
        for(j=0;j<n2;j++){
            scanf("%f %i", &polinomio2[j].coeficiente, &polinomio2[j].expoente);
        }
        if(operacao=='+') soma(n1, polinomio1, n2, polinomio2);
        else if(operacao=='-') sub(n1, polinomio1, n2, polinomio2);
    }
    return 0;
}

void soma(int n1, dados *p1, int n2, dados *p2){
    //printf("\n\n==========debug==========\n\n");
    int i, j=0, k=0, aux, maior_exp;
    int verifica1, verifica2;
    dados *result;
    result=(dados *) malloc(sizeof(dados));

    if(p1[0].expoente>p2[0].expoente) maior_exp=aux=p1[0].expoente;
    else maior_exp=aux=p2[0].expoente;

    //printf("maior_exp: %i\n", maior_exp);

    for(i=0;i<=maior_exp;i++){
        verifica1=verifica2=0;
        result->coeficiente=0;
        //printf("\n\n==========debug2==========\n\n");
        //printf("i: %i\naux: %i\n", i, aux);
        for(j=0;j<n1;j++){
            if(p1[j].expoente==aux){
                result->expoente=p1[j].expoente;
                result->coeficiente+=p1[j].coeficiente;
                verifica1=1;
            }
        }
        for(j=0;j<n2;j++){
            if(p2[j].expoente==aux){
                result->expoente=p2[j].expoente;
                result->coeficiente+=p2[j].coeficiente;
                verifica2=1;
            }
        }
        if(verifica1==1 || verifica2==1){
            if(result->expoente>0){
                if(result->expoente!=maior_exp && aux>0) {
                    if(result->coeficiente<0) printf(" - ");
                    else printf(" + ");
                }
                else if(result->expoente==maior_exp){
                    if(result->coeficiente<0) printf("-");
                }
                if(result->coeficiente<0) printf("%.2fX ^ %i", (result->coeficiente)*-1, result->expoente);
                else printf("%.2fX ^ %i", result->coeficiente, result->expoente);
            }
            else {
                if(result->coeficiente<0) printf(" - %.2f\n", (result->coeficiente)*-1);
                else printf(" + %.2f\n", result->coeficiente);
            }
            //k++;
            //result=(dados *) realloc(result, sizeof(dados));

        }
        aux--;
    }

}

void sub(int n1, dados *p1, int n2, dados *p2){
    int i, j=0, k=0, aux, maior_exp;
    int verifica1, verifica2;
    dados *result;
    result=(dados *) malloc(sizeof(dados));

    if(p1[0].expoente>p2[0].expoente) maior_exp=aux=p1[0].expoente;
    else maior_exp=aux=p2[0].expoente;
    //printf("\n\n==========debug==========\n\n");
    //printf("maior_exp: %i\n", maior_exp);

    for(i=0;i<=maior_exp;i++){
        verifica1=verifica2=0;
        result->coeficiente=0;
        //printf("\n\n==========debug2==========\n\n");
        //printf("i: %i\naux: %i\n", i, aux);
        for(j=0;j<n1;j++){
            if(p1[j].expoente==aux){
                result->expoente=p1[j].expoente;
                result->coeficiente+=p1[j].coeficiente;
                verifica1=1;
            }
        }
        for(j=0;j<n2;j++){
            if(p2[j].expoente==aux){
                result->expoente=p2[j].expoente;
                if(p2[j].coeficiente<0) result->coeficiente+=p2[j].coeficiente;
                else result->coeficiente-=p2[j].coeficiente;
                verifica2=1;
            }
        }
        if(verifica1==1 || verifica2==1){
            if(result->expoente>0){
                if(result->expoente!=maior_exp && aux>0) {
                    if(result->coeficiente<0) printf(" - ");
                    else printf(" + ");
                }
                else if(result->expoente==maior_exp){
                    if(result->coeficiente<0) printf("-");
                }
                if(result->coeficiente<0) printf("%.2fX ^ %i", (result->coeficiente)*-1, result->expoente);
                else printf("%.2fX ^ %i", result->coeficiente, result->expoente);
            }
            else {
                if(result->coeficiente<0) printf(" - %.2f\n", (result->coeficiente)*-1);
                else printf(" + %.2f\n", result->coeficiente);
            }
            //k++;
            //result=(dados *) realloc(result, sizeof(dados));

        }
        aux--;
    }

}

/*void soma(int n1, dados *p1, int n2, dados *p2){
    //printf("\n\n==========debug==========\n\n");
    int i, j=0, k=0, aux, maior_exp;
    int verifica1, verifica2;
    dados *result;
    result=(dados *) malloc(sizeof(dados));

    if(p1[0].expoente>p2[0].expoente) maior_exp=aux=p1[0].expoente;
    else maior_exp=aux=p2[0].expoente;

    //printf("maior_exp: %i\n", maior_exp);

    for(i=0;i<=maior_exp;i++){
        verifica1=verifica2=0;
        result->coeficiente=0;
        for(j=0;j<n1;j++){
            if(p1[j].expoente==aux){
                result[k].expoente=p1[j].expoente;
                result[k].coeficiente+=p1[j].coeficiente;
                verifica1=1;
            }
        }
        for(j=0;j<n2;j++){
            if(p2[j].expoente==aux){
                result[k].expoente=p2[j].expoente;
                result[k].coeficiente+=p2[j].coeficiente;
                verifica2=1;
            }
        }
        if(verifica1==1 || verifica2==1){
            k++;
            result=(dados *) realloc(result, sizeof(dados));
        }
        aux--;
    }
    for(i=0;i<=k;i++){

        if(result[i].expoente>0){
            if(result[i].expoente!=maior_exp && aux>0) {
                if(result[i].coeficiente<0) printf(" - ");
                else printf(" + ");
            }
            else if(result[i].expoente==maior_exp){
                if(result[i].coeficiente<0) printf("-");
            }
            if(result[i].coeficiente<0) printf("%.2fX ^ %i", (result[i].coeficiente)*-1, result[i].expoente);
            else printf("%.2fX ^ %i", result[i].coeficiente, result[i].expoente);
        }
        else {
            if(result[i].coeficiente<0) printf(" - %.2f\n", (result[i].coeficiente)*-1);
            else printf(" + %.2f\n", result[i].coeficiente);
        }
    }

}*/ //realloc(): invalid next size
